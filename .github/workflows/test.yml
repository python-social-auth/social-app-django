name: Tests

on:
  push:
  pull_request:
  schedule:
  - cron: 0 0 * * 0

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      PYTHONUNBUFFERED: 1

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install System dependencies
      run: |
        sudo apt update -qq -y
        sudo apt install -qq -y --no-install-recommends libxmlsec1-dev swig

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox coverage

    - name: Django 4.2.x Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django42"
      if: ${{ env.PYTHON_VERSION == '3.8' || env.PYTHON_VERSION == '3.9' || env.PYTHON_VERSION == '3.10' || env.PYTHON_VERSION == '3.11' }}

    - name: Django 5.0.x Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django50"
      if: ${{ env.PYTHON_VERSION == '3.10' || env.PYTHON_VERSION == '3.11' || env.PYTHON_VERSION == '3.12' || env.PYTHON_VERSION == '3.13' }}

    - name: Django 5.1.x Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django51"
      if: ${{ env.PYTHON_VERSION == '3.10' || env.PYTHON_VERSION == '3.11' || env.PYTHON_VERSION == '3.12' || env.PYTHON_VERSION == '3.13' }}

    - name: Django 5.2.x Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django52"
      if: ${{ env.PYTHON_VERSION == '3.10' || env.PYTHON_VERSION == '3.11' || env.PYTHON_VERSION == '3.12' || env.PYTHON_VERSION == '3.13' }}

    - name: Django main Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-djangomain"
      if: ${{ env.PYTHON_VERSION == '3.12' || env.PYTHON_VERSION == '3.13' }}

    - name: social-core master Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-socialmaster"
      if: ${{ env.PYTHON_VERSION == '3.10' || env.PYTHON_VERSION == '3.11' || env.PYTHON_VERSION == '3.13' }}

    - name: Coverage
      run: |
        coverage combine
        coverage xml

    - uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
      with:
        flags: unittests
        name: Python ${{ matrix.python-version }}
