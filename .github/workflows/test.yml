name: Tests

on: 
  push:
  pull_request:
  schedule:
      - cron:  '0 0 * * 0'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install System dependencies
      run: |
        sudo apt update -qq -y
        sudo apt install -qq -y --no-install-recommends libxmlsec1-dev swig

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox coverage

    - name: Django 2.2.x Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django-22"

    - name: Django 3.2.x Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django-32"

    - name: Django 4.0.x Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django-40"
      if: ${{ env.PYTHON_VERSION == '3.8' || env.PYTHON_VERSION == '3.9' || env.PYTHON_VERSION == '3.10' }}

    - name: Django main Test
      run: |
        tox -e "py${PYTHON_VERSION/\./}-django-main"
      if: ${{ env.PYTHON_VERSION == '3.8' || env.PYTHON_VERSION == '3.9' || env.PYTHON_VERSION == '3.10' }}

    - name: Coverage
      run: |
        coverage combine
        coverage xml

    - uses: codecov/codecov-action@v1
      with:
        flags: unittests
        name: Python ${{ matrix.python-version }}
